buildscript {
    ext {
        springBootVersion = "2.2.2.RELEASE"
        springCloudVersion = "Hoxton.RC1"
    }

    repositories {
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
        maven { url "https://repo.spring.io/release" }
        maven { url "http://repo.spring.io/plugins-release" }
    }
    dependencies {
        // classpath("org.jfrog.buildinfo:build-info-extractor-gradle:4.7.5")
        classpath("io.spring.gradle:dependency-management-plugin:1.0.6.RELEASE")
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        //  classpath("org.owasp:dependency-check-gradle:5.2.2")
    }
}
plugins {
    // id "ch.netzwerg.release" version "1.2.5"
    id "se.eugenekainara.docker" version "1.3.1"
    id "org.sonarqube" version "2.6.2"
    id "com.gorylenko.gradle-git-properties" version "1.4.17"
}

subprojects {

    sourceCompatibility = 10
    targetCompatibility = 10

    group parent.group
    version parent.version

    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = "sources"
        from sourceSets.main.allSource
    }


    sonarqube {
        properties {
            property "sonar.java.source", "10"
        }
    }

    test {
        useJUnitPlatform()
        testLogging {
            events 'FAILED', 'SKIPPED'
        }
        jvmArgs '--add-opens=java.base/java.lang=ALL-UNNAMED', '--illegal-access=warn'
        systemProperty 'spring.data.mongodb.port', '0'
    }

}

group 'com.skynet'
version '1.0-SNAPSHOT'

allprojects {

    //apply plugin: "com.jfrog.artifactory"
    apply plugin: "docker"
    apply plugin: "idea"
    apply plugin: "io.spring.dependency-management"
    apply plugin: "jacoco"
    apply plugin: "java"
    apply plugin: "maven"
    apply plugin: "maven-publish"
    //apply plugin: "org.owasp.dependencycheck"

    repositories {
        mavenCentral()
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
        maven { url "https://repo.spring.io/release" }
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.boot:spring-boot-dependencies:${springBootVersion}"
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }

}

// Projects with Spring Boot app
configure([
        project(':user-service')
]) {

    apply plugin: "org.springframework.boot"

    dependencies {
        runtime("io.micrometer:micrometer-registry-prometheus")
        compile("net.logstash.logback:logstash-logback-encoder:${logstash_logback_encoder_version}")
    }

    jar {
        enabled = true
    }
    bootJar {
        classifier = 'boot'
    }

}

test {
    useJUnitPlatform()
}